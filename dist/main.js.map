{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///external \"electron\"","webpack:///external \"path\"","webpack:///./node_modules/@babel/runtime/helpers/defineProperty.js","webpack:///external \"require(\\\"electron-updater\\\")\"","webpack:///external \"fs\"","webpack:///external \"os\"","webpack:///external \"require(\\\"electron-pdf-window\\\")\"","webpack:///external \"events\"","webpack:///external \"require(\\\"axios\\\")\"","webpack:///external \"require(\\\"electron-screenshots\\\")\"","webpack:///./src/main/online.js","webpack:///./src/main/logo.js","webpack:///./src/main/notify.js","webpack:///./src/main/download.js","webpack:///./src/main/autoUpdate.js","webpack:///./src/main/contextMenu.js","webpack:///./src/main/mainWin.js","webpack:///./src/main/aboutWin.js","webpack:///./src/main/ttkclientTray.js","webpack:///./src/main/closeWin.js","webpack:///./src/main/index.js","webpack:///./src/main/ttkclient.js","webpack:///./src/main/setting.js","webpack:///./src/main/shortcut.js","webpack:///./src/main/emailWin.js","webpack:///./src/main/errorWin.js","webpack:///./src/main/settingWin.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","require","obj","configurable","writable","ttkclient","path","join","app","getAppPath","Notify","Events","show","body","this","close","$notify","Notification","title","icon","logo","on","emit","isMac","process","platform","$win","autoUpdater","info","dialog","showMessageBox","$mainWin","type","message","version","noLink","buttons","index","quitAndInstall","e","axios","then","data","tag_name","slice","getVersion","shell","openExternal","setting","autoupdate","checkForUpdates","params","menuCmd","copy","id","label","cut","paste","selectall","selectionText","isEditable","editFlags","template","keys","map","cmd","enabled","visible","canCopy","canCut","canPaste","canSelectAll","role","filter","item","sort","a","b","length","isDestroyed","Menu","buildFromTemplate","popup","lastUrl","time","Date","now","url","indexOf","showMainWin","BrowserWindow","width","height","minWidth","minHeight","useContentSize","center","frame","backgroundColor","resizable","webPreferences","nodeIntegration","webContents","openDevTools","maximize","once","focus","autoUpdate","$tray","flicker","filename","fs","access","constants","R_OK","err","readFile","error","executeJavaScript","toString","send","preventDefault","contextMenu","ipcMain","minimize","isMaximized","unmaximize","cancelId","quit","showCloseWin","showEmailWin","count","setBadgeCount","dock","bounce","event","args","newwin","parent","loadURL","pdfWin","PDFWindow","showPdf","pdfUrl","hide","downloadURL","session","pdfLoad","constructor","Function","tmpDir","os","tmpdir","console","log","getFilename","setSavePath","exists","h","unlinkSync","state","isPaused","getReceivedBytes","download","loadFileUrl","$aboutWin","menu","modal","sendUpdateMessage","action","errorInfo","autoDownload","updateInfo","progressObj","percent","arg","downloadUpdate","sender","URL","ttkclientTray","screen","getPrimaryDisplay","scaleFactor","_ttkclient","Tray","noMessageTrayIcon","setToolTip","initEvent","setMenu","click","showSettingWin","showAboutWin","enableCapture","splice","screenshotsCapture","setContextMenu","is","enableFlicker","messageTrayIcon","_flickerTimer","setInterval","setImage","clearInterval","destroy","keymap","requestSingleInstanceLock","init","setAppUserModelId","setApplicationMenu","initMainWin","initTray","initScreenshots","initNotify","bindShortcut","online","showErrorWin","hideErrorWin","getPath","Promise","resolve","reject","W_OK","async","code","writeSetting","readSetting","initSetting","commandLine","workingDirectory","whenReady","mainWin","$screenshots","Screenshots","initAutoUpdaterCheck","$autoUpdater","JSON","parse","split","writeFile","stringify","getAllWindows","forEach","actions","globalShortcut","unregisterAll","register","isMinimized","restore","startCapture","storage","$emailWin","cookies","domain","cookie","set","$errorWin","transparent","closable","skipTaskbar","reload","$settingWin","resetTrayMenu","hideSettingWin","aboutWin","$closeWin"],"mappings":"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","file":"main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 10);\n","module.exports = require(\"electron\");","module.exports = require(\"path\");","function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nmodule.exports = _defineProperty;","module.exports = require(\"electron-updater\");","module.exports = require(\"fs\");","module.exports = require(\"os\");","module.exports = require(\"electron-pdf-window\");","module.exports = require(\"events\");","module.exports = require(\"axios\");","module.exports = require(\"electron-screenshots\");","import { ipcMain } from 'electron'\n\nexport default ttkclient => () => {\n  ipcMain.on('online', (e, online) => {\n    if (online === false) {\n      // 第一次启动窗口\n      if (ttkclient.online === null) {\n        ttkclient.showErrorWin()\n      }\n    } else {\n      ttkclient.hideErrorWin()\n    }\n    ttkclient.online = online\n  })\n}\n","import path from 'path'\nimport { app, screen } from 'electron'\n\nexport default path.join(app.getAppPath(), './resources/logo.png')\n\n/**\n * 没有消息时的托盘图标\n */\nexport function getNoMessageTrayIcon () {\n  if (process.platform === 'darwin') {\n    return path.join(app.getAppPath(), './resources/tray/16x16.png')\n  } else if (process.platform === 'win32') {\n    return path.join(app.getAppPath(), './resources/tray/64x64.png')\n  } else if (screen.getPrimaryDisplay().scaleFactor > 1) {\n    return path.join(app.getAppPath(), './resources/tray/64x64.png')\n  } else {\n    return path.join(app.getAppPath(), './resources/tray/20x20.png')\n  }\n}\n\n/**\n * 有消息时的托盘图标\n */\nexport function getMessageTrayIcon () {\n  if (process.platform === 'darwin') {\n    return path.join(app.getAppPath(), './resources/tray/n-16x16.png')\n  } else if (process.platform === 'win32') {\n    return path.join(app.getAppPath(), './resources/tray/n-64x64.png')\n  } else if (screen.getPrimaryDisplay().scaleFactor > 1) {\n    return path.join(app.getAppPath(), './resources/tray/n-64x64.png')\n  } else {\n    return path.join(app.getAppPath(), './resources/tray/n-20x20.png')\n  }\n}\n","import logo from './logo'\nimport Events from 'events'\nimport { Notification } from 'electron'\n\nexport default class Notify extends Events {\n  $notify = null\n  /**\n   * 显示提示\n   * @param {String} body\n   */\n  show (body) {\n    this.close()\n    this.$notify = new Notification({\n      title: '客户端',\n      body,\n      icon: logo\n    })\n    this.$notify.on('click', () => {\n      this.close()\n      this.emit('click')\n    })\n    this.$notify.show()\n  }\n\n  /**\n   * 关闭提示\n   */\n  close () {\n    if (this.$notify) {\n      this.$notify.close()\n      this.$notify = null\n    }\n  }\n}\n","import { app } from 'electron'\nimport path from 'path'\nimport os from 'os'\nimport fs from 'fs'\nconst isMac = process.platform === 'darwin'\nexport default $win => {\n  // 文件下载拦截\n  const files = []\n  /*$win.webContents.session.on('will-download', (event, item, webContents) => {\n    const time = Date.now()\n    const clientId = `${time}_${files.filter(({ clientId }) => clientId.indexOf(time) === 0).length}`\n    files.push({ clientId, item })\n    const file = {\n      clientId,\n      name: item.getFilename(),\n      fileSize: item.getTotalBytes(),\n      finishSize: item.getReceivedBytes(),\n      url: item.getURL(),\n      state: item.getState(),\n      setSavePath: `file://${path.join(app.getAppPath(), `./dist/renderer/${item.getFilename()}`)}`\n    }\n    if (!$win.isDestroyed()) {\n      webContents.send('MAINWIN:download-start', file)\n    }\n    // 监听下载过程，计算并设置进度条进度\n    item.on('updated', (e, state) => {\n      file.state = state\n      file.finishSize = item.getReceivedBytes()\n      if (!$win.isDestroyed()) {\n        webContents.send('MAINWIN:download-updated', file)\n        $win.setProgressBar(file.finishSize / file.fileSize)\n      }\n    })\n\n    // 监听下载结束事件\n    item.on('done', (e, state) => {\n      file.state = state\n      file.finishSize = item.getReceivedBytes()\n      if (!$win.isDestroyed()) {\n        webContents.send('MAINWIN:download-done', file)\n        $win.setProgressBar(-1)\n      }\n      if (app.dock) {\n        app.dock.bounce('informational')\n      }\n    })\n  })*/\n\n  $win.webContents.session.on('will-download', (event, item, webContents) => {\n    //设置文件存放位置，如果用户没有设置保存路径，Electron将使用默认方式来确定保存路径（通常会提示保存对话框）\n    const pdfLoad = $win.showPdf && $win.showPdf.constructor === Function\n    let tmpDir = os.tmpdir(), pdfUrl\n    if(isMac) {\n      tmpDir = os.tmpDir()\n    }\n    console.log(tmpDir)\n    if(pdfLoad) {\n      pdfUrl = `${tmpDir}/${item.getFilename()}`\n      item.setSavePath(pdfUrl)\n      const pdfFile = fs.exists(pdfUrl, h => {\n        if(h) fs.unlinkSync(pdfUrl)\n      })\n    }\n    item.on('updated', (event, state) => {\n      if (state === 'interrupted') {\n        console.log('Download is interrupted but can be resumed')\n      } else if (state === 'progressing') {\n        if (item.isPaused()) {\n          console.log('Download is paused')\n        } else {\n          console.log(`Received bytes: ${item.getReceivedBytes()}`)\n        }\n      }\n    })\n    item.once('done', (event, state) => {\n      if (state === 'completed') {\n        console.log('Download successfully')\n        //回显 调用渲染进程方法\n        if(pdfLoad && pdfUrl) {\n          $win.showPdf(pdfUrl)\n        }\n        $win.webContents.send('downstate', state)\n      } else {\n        console.log(`Download failed: ${state}`)\n        //回显 调用渲染进程方法\n        $win.webContents.send('downstate', state)\n      }\n    })\n  })\n}\n","import {\n  app,\n  dialog,\n  shell\n} from 'electron'\nimport axios from 'axios'\nimport { autoUpdater } from 'electron-updater'\n\nexport default ttkclient => () => {\n  autoUpdater.on('update-downloaded', info => {\n    dialog.showMessageBox(ttkclient.$mainWin, {\n      type: 'question',\n      title: '立即更新',\n      message: `新版本${info.version}已经下载完成，是否立即更新？`,\n      noLink: true,\n      buttons: ['是', '否']\n    }, index => {\n      if (index === 0) {\n        autoUpdater.quitAndInstall()\n      }\n    })\n  })\n\n  autoUpdater.on('error', e => {\n    axios.get('http://test.aierp.cn:8089/vendor/releases/latest')\n      .then(({ data }) => {\n        // 检查版本号\n        // 如果本地版本小于远程版本则更新\n        if (data.tag_name.slice(1) > app.getVersion()) {\n          dialog.showMessageBox(ttkclient.$mainWin, {\n            type: 'question',\n            title: '版本更新',\n            message: '已有新版本更新，是否立即前往下载最新安装包？',\n            noLink: true,\n            buttons: ['是', '否']\n          }, index => {\n            if (index === 0) {\n              shell.openExternal('http://test.aierp.cn:8089/vendor/releases/latest')\n            }\n          })\n        }\n      })\n  })\n\n  if (ttkclient.setting.autoupdate) {\n    autoUpdater.checkForUpdates()\n  }\n}\n","import { Menu } from 'electron'\n\nexport default ($win, params) => {\n  // 菜单执行命令\n  const menuCmd = {\n    copy: {\n      id: 1,\n      label: '复制'\n    },\n    cut: {\n      id: 2,\n      label: '剪切'\n    },\n    paste: {\n      id: 3,\n      label: '粘贴'\n    },\n    selectall: {\n      id: 4,\n      label: '全选'\n    }\n  }\n\n  const { selectionText, isEditable, editFlags } = params\n\n  // 生成菜单模板\n  const template = Object.keys(menuCmd)\n    .map(cmd => {\n      const { id, label } = menuCmd[cmd]\n      let enabled = false\n      let visible = false\n      const { canCopy, canCut, canPaste, canSelectAll } = editFlags\n      switch (cmd) {\n        case 'copy':\n          // 有文字选中就显示\n          visible = !!selectionText\n          enabled = canCopy\n          break\n        case 'cut':\n          // 可以编辑就显示项目\n          visible = !!isEditable\n          // 有文字选中才可用\n          enabled = visible && !!selectionText && canCut\n          break\n        case 'paste':\n          // 可以编辑就显示项目\n          visible = !!isEditable\n          enabled = visible && canPaste\n          break\n        case 'selectall':\n          // 可以编辑就显示项目\n          visible = !!isEditable\n          enabled = visible && canSelectAll\n          break\n        default:\n          break\n      }\n      return {\n        id,\n        label,\n        role: cmd,\n        enabled,\n        visible\n      }\n    })\n    .filter(item => item.visible)\n    .sort((a, b) => a.id > b.id)\n\n  // 用模板生成菜单\n  if (template.length && !$win.isDestroyed()) {\n    const menu = Menu.buildFromTemplate(template)\n    menu.popup($win)\n  }\n}\n","import fs from 'fs'\nimport path from 'path'\nimport logo from './logo'\nimport download from './download'\nimport autoUpdate from './autoUpdate'\nimport contextMenu from './contextMenu'\nimport { app, BrowserWindow, shell, ipcMain, Menu, dialog } from 'electron'\nimport PDFWindow from 'electron-pdf-window'\n\n\nlet lastUrl\nlet time = Date.now()\nconst isMac = process.platform === 'darwin'\n\n/**\n * 打开外部链接\n * @param {String} url\n */\nfunction openExternal(url) {\n  if (url === 'about:blank') return\n  if (url === '//erp.jchl.com/#/edfx-app-root/ttk-zs-app-login') return\n  if (url.indexOf('//erp.jchl.com/vendor/download') === 0) return\n  if (url.indexOf('//erp.jchl.com/vendor/attachment') === 0) return\n  // 防止短时间快速点击链接\n  if (lastUrl === url && Date.now() - time < 800) return\n  lastUrl = url\n  time = Date.now()\n  shell.openExternal(url)\n}\n\nexport default ttkclient => () => {\n  if (ttkclient.$mainWin) {\n    ttkclient.showMainWin()\n    return\n  }\n  // 创建浏览器窗口\n  const $win = new BrowserWindow({\n    title: '金财管家客户端',\n    width: 630,\n    height: 380,\n    minWidth: 630,\n    minHeight: 380,\n    useContentSize: true,\n    center: true,\n    frame: false,\n    show: false,\n    backgroundColor: '#0066b3',\n    icon: logo,\n    resizable: true,\n    webPreferences: {\n      nodeIntegration: true\n    }\n  })\n  $win.webContents.openDevTools();\n  $win.maximize()\n  /*if(isMac) { // Menu\n    const menu = Menu.buildFromTemplate(createMenu())\n    Menu.setApplicationMenu(menu)\n  }*/\n\n  /**\n   * 优雅的显示窗口\n   */\n  $win.once('ready-to-show', () => {\n    $win.show()\n    $win.focus()\n\n    /**\n     * 先让主窗口显示后在执行检查更新\n     * 防止对话框跑到主窗口后面\n     * 导致窗口点击不了\n     */\n    autoUpdate(ttkclient)\n  })\n\n  /**\n   * 窗体关闭事件处理\n   * 默认只会隐藏窗口\n   */\n  /*$win.on('close', e => {\n    e.preventDefault()\n    $win.hide()\n  })*/\n\n  $win.webContents.on('dom-ready', () => {\n    // 页面初始化图标不跳动\n    if (ttkclient.$tray) ttkclient.$tray.flicker(false)\n    const filename = path.join(app.getAppPath(), './dist/preload/mainWin.js')\n    // 读取js文件并执行\n    fs.access(filename, fs.constants.R_OK, err => {\n      if (err) return\n      fs.readFile(filename, (error, data) => {\n        if (error || $win.webContents.isDestroyed()) return\n        $win.webContents.executeJavaScript(data.toString(), () => {\n          if (!$win.webContents.isDestroyed()) $win.webContents.send('dom-ready')\n        })\n      })\n    })\n  })\n\n  // 右键菜单\n  $win.webContents.on('context-menu', (e, params) => {\n    e.preventDefault()\n    contextMenu($win, params)\n  })\n\n  // 浏览器中打开链接\n  $win.webContents.on('new-window', (e, url) => {\n    e.preventDefault()\n    openExternal(url)\n  })\n\n  // 主窗口导航拦截\n  $win.webContents.on('will-navigate', (e, url) => {\n    e.preventDefault()\n    openExternal(url)\n  })\n\n  /**\n  * 程序坞图标打开窗口\n  */\n  app.on('activate', () => {\n    $win.show()\n    $win.focus()\n  })\n\n  ipcMain.on('MAINWIN:window-minimize', () => $win.minimize())\n\n  ipcMain.on('MAINWIN:window-maximization', () => {\n    if ($win.isMaximized()) {\n      $win.unmaximize()\n    } else {\n      $win.maximize()\n    }\n  })\n\n  // ipcMain.on('MAINWIN:window-close', () => $win.hide())\n  ipcMain.on('MAINWIN:window-close', () => {\n    if (isMac) {\n      dialog.showMessageBox({\n        type: \"info\", //图标类型\n        title: \"关闭提示\", //信息提示框标题\n        message: \"点击确定将退出此程序\", //信息提示框内容\n        buttons: [\"确定\", \"取消\"], //下方显示的按钮\n        icon: logo,\n        cancelId: 2 //点击x号关闭返回值\n      }, function (index) {\n        if (index == 0) {\n          app.quit()\n        }\n      })\n    } else {\n      ttkclient.showCloseWin()\n    }\n  })\n  ipcMain.on('MAINWIN:open-email', (e, url) => ttkclient.showEmailWin(url))\n\n  ipcMain.on('MAINWIN:window-show', () => {\n    $win.show()\n    $win.focus()\n  })\n\n  ipcMain.on('MAINWIN:badge', (e, count) => {\n    app.setBadgeCount(count)\n    if (ttkclient.$tray) ttkclient.$tray.flicker(!!count)\n    if (app.dock) {\n      app.dock.show()\n      app.dock.bounce('critical')\n    }\n  })\n\n  ipcMain.on('icpRender-pdfLoad', function (event, args) {\n    const newwin = new BrowserWindow({\n      title: '',\n      width: 600,\n      height: 400,\n      parent: $win,\n    })\n    newwin.loadURL(args)\n    const pdfWin = new PDFWindow({\n      width: 600,\n      height: 400,\n      title: '文件正在加载...'\n    })\n    $win.showPdf = function (pdfUrl) {\n      newwin.hide()\n      pdfWin.loadURL(pdfUrl)\n      pdfWin.maximize();\n      $win.showPdf = null\n    }\n    return newwin\n  })\n\n  ipcMain.on('icpRender-pdfPrint', function (event, args) {\n    const pdfWin = new PDFWindow({\n      width: 600,\n      height: 400,\n      title: '文件正在加载...'\n    })\n    pdfWin.loadURL(args)\n    $win.showPdf = function (pdfUrl) {\n      pdfWin.loadURL(pdfUrl)\n      pdfWin.maximize();\n      $win.showPdf = null\n    }\n  })\n\n  ipcMain.on('icpRender-message', function (event, args) {\n    if (args === 'icpRender-message') {\n      $win.maximize();\n    }\n  })\n\n  ipcMain.on('icpRender-newWin', function (event, args) {\n    const newwin = new BrowserWindow({\n      title: '',\n      width: 600,\n      height: 400,\n      parent: $win,\n    })\n    newwin.maximize();\n    newwin.loadURL(args)\n    return newwin\n  })\n\n  ipcMain.on('icpRender-download', function (event, args) {\n    $win.webContents.downloadURL(args)\n  })\n\n  download($win)\n  // 加载URL地址\n  // $win.loadURL('http://test.aierp.cn:8089/#/edfx-app-root/ttk-zs-app-login')\n  console.log(process.env.NODE_ENV)\n  const loadFileUrl = process.env.NODE_ENV === 'development'\n    ? 'http://localhost:8080/aboutWin.html'\n    : `file://${path.join(app.getAppPath(), './dist/renderer/index.html')}`\n  // const loadFileUrl = path.join(__dirname, '../renderer/index.html')\n  $win.loadURL(loadFileUrl)\n\n\n  return $win\n}\n\n\nfunction createMenu() {\n  // Menu\n  const template = [{\n    label: '编辑',\n    submenu: [{\n      label: '撤销',\n      accelerator: 'CmdOrCtrl+Z',\n      role: 'undo'\n    }, {\n      label: '重做',\n      accelerator: 'Shift+CmdOrCtrl+Z',\n      role: 'redo'\n    }, {\n      type: 'separator'\n    }, {\n      label: '复制',\n      accelerator: 'CmdOrCtrl+C',\n      role: 'copy'\n    }, {\n      label: '粘贴',\n      accelerator: 'CmdOrCtrl+V',\n      role: 'paste'\n    }]\n  }, {\n    label: '帮助',\n    role: 'help',\n    submenu: [{\n      label: '学习更多',\n      click: function () {\n        electron.shell.openExternal('http://electron.atom.io')\n      }\n    }]\n  }];\n\n\n  return template\n}\n","import path from 'path'\nimport logo from './logo'\nimport contextMenu from './contextMenu'\nimport { autoUpdater } from 'electron-updater'\nimport { app, BrowserWindow, ipcMain, dialog } from 'electron'\n\nconst feedUrl = `http://127.0.0.1:8080/packages/download/`;\n// const feedUrl = `https://huaworld.oss-cn-beijing.aliyuncs.com/DOWNLOAD/win32`;\n\nexport default ttkclient => () => {\n  if (ttkclient.$aboutWin) {\n    ttkclient.$aboutWin.show()\n    ttkclient.$aboutWin.focus()\n    return ttkclient.$aboutWin\n  }\n  const $win = new BrowserWindow({\n    title: \"金财管家\",\n    width: 1024,\n    height: 768,\n    useContentSize: true,\n    resizable: false,\n    menu: false,\n    parent: ttkclient.$mainWin,\n    modal: process.platform !== 'darwin',\n    show: false,\n    icon: logo,\n    webPreferences: {\n      nodeIntegration: true\n    }\n  })\n  $win.webContents.openDevTools();\n  $win.on('ready-to-show', () => {\n    $win.show()\n    $win.focus()\n  })\n\n  // 窗口关闭后手动让$window为null\n  $win.on('closed', () => {\n    ttkclient.$aboutWin = null\n  })\n\n  $win.webContents.on('dom-ready', () => {\n    if (!$win.webContents.isDestroyed()) $win.webContents.send('dom-ready')\n  })\n\n  // 右键上下文菜单\n  $win.webContents.on('context-menu', (e, params) => {\n    e.preventDefault()\n    contextMenu($win, params)\n  })  // update start\n  let sendUpdateMessage = (message, data) => {\n    $win.webContents.send('message', { message, data, feedUrl });\n  };\n\n  // let checkForUpdates = () => {\n  //   autoUpdater.setFeedURL(feedUrl);\n\n  //   autoUpdater.on('error', function (message) {\n  //     sendUpdateMessage('error', message)\n  //   });\n  //   autoUpdater.on('checking-for-update', function (message) {\n  //     sendUpdateMessage('checking-for-update', message)\n  //   });\n  //   autoUpdater.on('update-available', function (message) {\n  //     sendUpdateMessage('update-available', message)\n  //   });\n  //   autoUpdater.on('update-not-available', function (message) {\n  //     dialog.showMessageBox({\n  //       type: 'info',\n  //       title: '应用有新版本',\n  //       message: '发现新版本，是否现在更新?',\n  //       buttons: ['是', '否']\n  //     }, (buttonIndex) => {\n  //       if (buttonIndex === 0) {\n  //         autoUpdater.downloadUpdate()\n  //         sendUpdateMessage('update-not-available', message)\n  //       }\n\n  //     })\n  //     // sendUpdateMessage('update-not-available', message)\n  //   });\n\n  //   // 更新下载进度事件\n  //   autoUpdater.on('download-progress', function (progressObj) {\n  //     sendUpdateMessage('downloadProgress', progressObj)\n  //   })\n  //   autoUpdater.on('update-downloaded', function (event, releaseNotes, releaseName, releaseDate, updateUrl, quitAndUpdate) {\n  //     ipcMain.on('updateNow', (e, arg) => {\n  //       // let exePath = path.dirname(remote.app.getPath('exe'));\n  //       // console.log(exePath, '================================================================');\n  //       //some code here to handle event\n  //       autoUpdater.quitAndInstall();\n  //       ttkclient.quit()\n  //     })\n  //     sendUpdateMessage('isUpdateNow');\n  //   });\n\n  //   //执行自动更新检查\n  //   autoUpdater.checkForUpdates();\n  // };\n\n\n  /**\n   * 自动更新\n   */\n  function autoUpdate() {\n    // 通过main进程发送事件给renderer进程，提示更新信息\n    function sendUpdateMessage(obj) {\n      $win.webContents.send('updateMessage', obj)\n    }\n\n    console.log(\"autoUpdate start...\")\n\n    // 监测更新，在你想要检查更新的时候执行，renderer事件触发后的操作自行编写\n    const message = {\n      error: '检查更新出错',\n      checking: '正在检查更新......',\n      updateAva: '监测到新版本，正在下载......',\n      updateNotAva: '现在使用的就是最新版本，不用下载'\n    }\n\n    // 当更新出现错误时触发\n    autoUpdater.on('error', (err) => {\n      // sendUpdateMessage('error')\n      sendUpdateMessage({ action: 'error', errorInfo: err })\n    })\n\n    // 当开始检查更新的时候触发\n    autoUpdater.on('checking-for-update', () => {\n      // sendUpdateMessage('checking')\n      sendUpdateMessage({ action: 'checking' })\n    })\n\n    // 当发现一个可用更新的时候触发，更新下载包会自动开始\n    autoUpdater.autoDownload = true\n    autoUpdater.on('update-available', (info) => {\n      // sendUpdateMessage('updateAva')\n      sendUpdateMessage({ action: 'updateAva', updateInfo: info })\n    })\n\n    // 当没有可用更新的时候触发\n    autoUpdater.on('update-not-available', (info) => {\n      // sendUpdateMessage('updateNotAva')\n      sendUpdateMessage({ action: 'updateNotAva', updateInfo: info })\n    })\n\n    // 更新下载进度事件\n    autoUpdater.on('download-progress', (progressObj) => {\n      $win.webContents.send('downloadProgress', progressObj)\n    })\n\n    /**\n     * event Event\n     * releaseNotes String - 新版本更新公告\n     * releaseName String - 新的版本号\n     * releaseDate Date - 新版本发布的日期\n     * updateUrl String - 更新地址\n     */\n    autoUpdater.on('update-downloaded', (info) => {\n      // 下载太快可能无法触发downloadProgress事件，所以手动通知一下\n      $win.webContents.send('downloadProgress', { percent: 100 })\n      // 可以手动选择是否立即退出并更新\n      ipcMain.on('isUpdateNow', (e, arg) => {\n        // some code here to handle event\n        autoUpdater.quitAndInstall()\n      })\n    })\n\n    ipcMain.on('checkForUpdate', () => {\n      // 执行自动更新检查\n      autoUpdater.checkForUpdates()\n    })\n\n    ipcMain.on('downloadUpdate', () => {\n      // 下载\n      autoUpdater.downloadUpdate()\n    })\n\n    //执行自动更新检查\n    autoUpdater.checkForUpdates();\n  }\n\n\n  // // 通过main进程发送事件给renderer进程，提示更新信息\n  // function sendUpdateMessage(text) {\n  //   $win.webContents.send('message', text)\n  // }\n\n\n\n  ipcMain.on('ABOUTWIN:checkForUpdates', () => {\n    // autoUpdater.checkForUpdates()\n    // checkForUpdates()\n    console.log(\"===开始升级===\")\n    autoUpdate();\n  })\n\n  ipcMain.on('main-window-onlaod', (event, arg) => {\n    event.sender.send('main-window-hidden', 'hidden')\n  })\n\n  // 加载URL地址\n  const URL = process.env.NODE_ENV === 'development'\n    ? 'https://erp.jchl.com/#/edfx-app-root/edfx-app-agreement'\n    : `file://${path.join(app.getAppPath(), './dist/renderer/aboutWin.html')}`\n\n  $win.loadURL(URL)\n  return $win\n}\n","import { Tray, Menu } from 'electron'\nimport { getMessageTrayIcon, getNoMessageTrayIcon } from './logo'\n\nexport default class ttkclientTray {\n  _ttkclient = null\n  // 图标闪烁定时\n  _flickerTimer = null\n\n  // 托盘对象\n  $tray = null\n  // 图标文件\n  messageTrayIcon = getMessageTrayIcon()\n  noMessageTrayIcon = getNoMessageTrayIcon()\n\n  constructor({ ttkclient }) {\n    this._ttkclient = ttkclient\n    // 生成托盘图标及其菜单项实例\n    this.$tray = new Tray(this.noMessageTrayIcon)\n    // 设置鼠标悬浮时的标题\n    this.$tray.setToolTip('金财管家')\n    this.initEvent()\n    this.setMenu()\n  }\n\n  /**\n   * 初始化事件\n   */\n  initEvent() {\n    this.$tray.on('click', () => this._ttkclient.showMainWin())\n    this.$tray.on('double-click', () => this._ttkclient.showMainWin())\n  }\n\n  /**\n   * 设置菜单\n   */\n  setMenu() {\n    const menu = [\n      {\n        label: '打开主窗口',\n        click: () => this._ttkclient.showMainWin()\n      },\n      {\n        label: '系统设置',\n        click: () => this._ttkclient.showSettingWin()\n      },\n      {\n        label: '关于',\n        click: () => this._ttkclient.showAboutWin()\n      },\n      {\n        label: '退出',\n        click: () => this._ttkclient.quit()\n      }\n    ]\n\n    if (this._ttkclient.setting.enableCapture) {\n      menu.splice(1, 0, {\n        label: '屏幕截图',\n        click: () => this._ttkclient.screenshotsCapture()\n      })\n    }\n\n    // 绑定菜单\n    this.$tray.setContextMenu(Menu.buildFromTemplate(menu))\n  }\n\n  /**\n   * 控制图标是否闪烁\n   * @param {Boolean} is\n   */\n  flicker(is) {\n    const { enableFlicker } = this._ttkclient.setting\n    if (is) {\n      let icon = this.messageTrayIcon\n      if (enableFlicker) {\n        // 防止连续调用多次，导致图标切换时间间隔不是1000ms\n        if (this._flickerTimer !== null) return\n        this._flickerTimer = setInterval(() => {\n          this.$tray.setImage(icon)\n          icon = icon === this.messageTrayIcon ? this.noMessageTrayIcon : this.messageTrayIcon\n        }, 1000)\n      } else {\n        this.$tray.setImage(icon)\n      }\n    } else {\n      clearInterval(this._flickerTimer)\n      this._flickerTimer = null\n      this.$tray.setImage(this.noMessageTrayIcon)\n    }\n  }\n\n  /**\n   * 判断托盘是否销毁\n   */\n  isDestroyed() {\n    return this.$tray.isDestroyed()\n  }\n\n  /**\n   * 销毁托盘图标\n   */\n  destroy() {\n    return this.$tray.destroy()\n  }\n}\n","import path from 'path'\nimport logo from './logo'\nimport { app, BrowserWindow, ipcMain } from 'electron'\n\n\nexport default ttkclient => () => {\n  if (ttkclient.$closeWin) {\n    ttkclient.$closeWin.show()\n    ttkclient.$closeWin.focus()\n    return ttkclient.$closeWin\n  }\n  const $win = new BrowserWindow({\n    title: \"\",\n    width: 380,\n    height: 120,\n    useContentSize: true,\n    resizable: false,\n    menu: false,\n    parent: ttkclient.$mainWin,\n    modal: process.platform !== 'darwin',\n    show: false,\n    icon: logo,\n    webPreferences: {\n      nodeIntegration: true\n    }\n  })\n//   $win.webContents.openDevTools();\n\n  $win.on('ready-to-show', () => {\n    $win.show()\n    $win.focus()\n  })\n\n  // 窗口关闭后手动让$window为null\n  $win.on('closed', () => {\n    ttkclient.$closeWin = null\n  })\n\n  $win.webContents.on('dom-ready', () => {\n    if (!$win.webContents.isDestroyed()) $win.webContents.send('dom-ready')\n  })\n\n  ipcMain.on('CLOSEWIN:close', (event, arg) => {\n    if(arg == 'self') {\n        $win.hide()\n    } else if(arg == 'all') {\n        ttkclient.quit()\n    }\n  })\n\n  // 加载URL地址\n  const URL = process.env.NODE_ENV === 'development'\n    ? 'https://erp.jchl.com/#/edfx-app-root/edfx-app-agreement'\n    : `file://${path.join(app.getAppPath(), './dist/renderer/closeWin.html')}`\n\n  $win.loadURL(URL)\n  return $win\n}\n","import ttkclient from './ttkclient'\n\n/* eslint-disable no-new */\nnew ttkclient()\n","import { app, Menu, ipcMain, BrowserWindow } from 'electron'\nimport path from 'path'\nimport { initSetting, readSetting, writeSetting } from './setting'\nimport online from './online'\nimport Notify from './notify'\nimport mainWin from './mainWin'\nimport emailWin from './emailWin'\nimport errorWin from './errorWin'\nimport aboutWin from './aboutWin'\nimport shortcut from './shortcut'\nimport settingWin from './settingWin'\nimport ttkclientTray from './ttkclientTray'\nimport closeWin from './closeWin'\nimport Screenshots from 'electron-screenshots'\nimport autoUpdater from './autoUpdate'\n\nexport default class ttkclient {\n  // app对象是否ready\n  _ready = null\n  // 托盘图标\n  $tray = null\n  // 主窗口\n  $mainWin = null\n  // 邮箱窗口\n  $emailWin = null\n  // 错误窗口\n  $errorWin = null\n  // 设置窗口\n  $settingWin = null\n  // 关于窗口\n  $aboutWin = null\n  // 关闭提示窗口\n  $closeWin = null\n  // 截图对象\n  $screenshots = null\n  // 网络情况，默认为null，必须等到页面报告状态\n  online = null\n  //自动更新问题\n  $autoUpdater = null\n  // 默认配置\n  setting = {\n    autoupdate: true,\n    enableCapture: true,\n    enableFlicker: true,\n    keymap: {\n      'screenshots-capture': ['Control', 'Alt', 'A']\n    }\n  }\n\n  constructor() {\n    if (!app.requestSingleInstanceLock()) return app.quit()\n\n    // flash\n    // app.commandLine.appendSwitch('ppapi-flash-path', `file://${path.join(app.getAppPath(), './resources/pepflashplayer.dll')}`);\n    // app.commandLine.appendSwitch('ppapi-flash-path', app.getPath('pepperFlashSystemPlugin'));\n    // app.commandLine.appendSwitch('ppapi-flash-version', '32.0.0.363');\n\n    this.init().then(() => {\n      app.setAppUserModelId('com.electron.ttkclient')\n      // 移除窗口菜单\n      Menu.setApplicationMenu(null)\n      this.initMainWin()\n      this.initTray()\n      this.initScreenshots()\n      this.initNotify()\n      this.bindShortcut()\n      // this.initAutoUpdaterCheck()\n    })\n  }\n\n  /**\n   * 初始化\n   * @return {Promise} setting\n   */\n  async init() {\n    online(this)()\n    this.setting = await initSetting(this)()\n    // 重复打开应用就显示窗口\n    app.on('second-instance', (event, commandLine, workingDirectory) => this.showMainWin())\n\n    /* app.setLoginItemSettings({\n      openAtLogin: true, // Boolean 在登录时启动应用\n      openAsHidden: true, // Boolean (可选) mac 表示以隐藏的方式启动应用。~~~~\n      // path: '', String (可选) Windows - 在登录时启动的可执行文件。默认为 process.execPath.\n      // args: [] String Windows - 要传递给可执行文件的命令行参数。默认为空数组。注意用引号将路径换行。\n    }) */\n\n    // 所有窗口关闭之后退出应用\n    app.once('window-all-closed', () => {\n      if (process.platform !== 'darwin') {\n        if (this.$tray && !this.$tray.isDestroyed()) {\n          this.$tray.destroy()\n          this.$tray = null\n        }\n        app.quit()\n      }\n    })\n    return app.whenReady()\n  }\n\n  /**\n   * 初始化主窗口\n   */\n  initMainWin() {\n    this.$mainWin = mainWin(this)()\n  }\n\n  /**\n   * 初始化托盘图标\n   */\n  initTray() {\n    this.$tray = new ttkclientTray({ ttkclient: this })\n  }\n\n  /**\n   * 初始化截图\n   */\n  initScreenshots() {\n    this.$screenshots = new Screenshots()\n  }\n\n\n  /**\n   * 自动更新检测\n   */\n\n  initAutoUpdaterCheck() {\n    this.$autoUpdater = new autoUpdater();\n  }\n\n  /**\n   * 初始化消息提示\n   */\n  initNotify() {\n    this.$notify = new Notify()\n    ipcMain.on('notify', (e, body) => this.$notify.show(body))\n    this.$notify.on('click', () => this.showMainWin())\n  }\n\n  /**\n   * 从文件中读取设置信息\n   * @return {Promise} setting\n   */\n  readSetting() {\n    return readSetting(this)()\n  }\n\n  /**\n   * 写入设置到文件\n   * @return {Promise} setting\n   */\n  writeSetting() {\n    return writeSetting(this)()\n  }\n\n  /**\n   * 退出应用\n   */\n  quit() {\n    const windows = BrowserWindow.getAllWindows()\n    windows.forEach(item => item.destroy())\n    if (process.platform !== 'darwin') {\n      if (this.$tray && !this.$tray.isDestroyed()) {\n        this.$tray.destroy()\n        this.$tray = null\n      }\n      app.quit()\n    }\n  }\n\n  /**\n   * 绑定快捷键\n   */\n  bindShortcut() {\n    shortcut(this)()\n  }\n\n  /**\n   * 显示主窗口\n   */\n  showMainWin() {\n    if (this.$mainWin) {\n      if (this.online) {\n        if (this.$mainWin.isMinimized()) this.$mainWin.restore()\n        this.$mainWin.show()\n        this.$mainWin.focus()\n      } else if (this.online === false) {\n        /**\n         * this.online === null不显示\n         * 因为可能此时还没有初始化online\n         * 即$mainWin还没有触发dom-ready\n         */\n        this.showErrorWin()\n      }\n    }\n  }\n\n  /**\n   * 截图\n   */\n  screenshotsCapture() {\n    if (this.$screenshots) {\n      this.$screenshots.startCapture()\n    }\n  }\n\n  /**\n   * 显示邮箱窗口\n   * @param {Object} storage\n   */\n  showEmailWin(storage) {\n    this.$emailWin = emailWin(this)(storage)\n  }\n\n  /**\n   * 显示错误窗口\n   */\n  showErrorWin() {\n    this.$errorWin = errorWin(this)()\n  }\n\n  /**\n   * 隐藏错误窗口\n   */\n  hideErrorWin() {\n    if (this.$errorWin) {\n      this.$errorWin.close()\n    }\n  }\n\n  /**\n   * 显示设置窗口\n   */\n  showSettingWin() {\n    this.$settingWin = settingWin(this)()\n  }\n\n  /**\n   * 关闭设置窗口\n   */\n  hideSettingWin() {\n    if (this.$settingWin) {\n      this.$settingWin.close()\n    }\n  }\n\n  resetTrayMenu() {\n    if (this.$tray && !this.$tray.isDestroyed()) {\n      this.$tray.setMenu()\n    }\n  }\n\n  /**\n   * 显示关于窗口\n   */\n  showAboutWin() {\n    this.$aboutWin = aboutWin(this)()\n  }\n\n  /**\n   * 显示关闭窗口\n   */\n  showCloseWin() {\n    this.$closeWin = closeWin(this)()\n  }\n}\n","import fs from 'fs'\nimport path from 'path'\nimport { app } from 'electron'\n\n/**\n * 初始化设置选项\n */\nexport const initSetting = ttkclient => () => {\n  const filename = path.join(app.getPath('userData'), 'setting.json')\n  return new Promise((resolve, reject) => {\n    fs.access(filename, fs.constants.R_OK | fs.constants.W_OK, async err => {\n      if (err) {\n        if (err.code === 'ENOENT') {\n          return resolve(await ttkclient.writeSetting())\n        } else {\n          return reject(err)\n        }\n      }\n      resolve(await ttkclient.readSetting())\n    })\n  })\n}\n\n/**\n * 从文件中读取设置信息\n */\nexport const readSetting = ttkclient => () => {\n  const filename = path.join(app.getPath('userData'), 'setting.json')\n  return new Promise((resolve, reject) => {\n    fs.readFile(filename, (err, data) => {\n      if (err) return reject(err)\n      try {\n        const setting = JSON.parse(data)\n        if (typeof setting.keymap['screenshots-capture'] === 'string') {\n          setting.keymap['screenshots-capture'] = setting.keymap['screenshots-capture'].split('+')\n        }\n        resolve({ ...ttkclient.setting, ...setting })\n      } catch (e) {\n        resolve(ttkclient.setting)\n      }\n    })\n  })\n}\n\n/**\n * 写入设置到文件\n */\nexport const writeSetting = ttkclient => () => {\n  const filename = path.join(app.getPath('userData'), 'setting.json')\n  return new Promise((resolve, reject) => {\n    fs.writeFile(filename, JSON.stringify(ttkclient.setting, null, 2), err => {\n      if (err) return reject(err)\n      resolve(ttkclient.setting)\n    })\n  })\n}\n","import { globalShortcut } from 'electron'\n\nexport default ttkclient => () => {\n  const actions = {\n    'screenshots-capture': () => ttkclient.screenshotsCapture()\n  }\n  const keymap = ttkclient.setting.keymap\n\n  if (!ttkclient.setting.enableCapture) delete actions['screenshots-capture']\n\n  // 注销所有的快捷键\n  globalShortcut.unregisterAll()\n  Object.keys(actions).forEach(key => {\n    if (keymap[key] && keymap[key].length) {\n      globalShortcut.register(keymap[key].join('+'), actions[key])\n    }\n  })\n}\n","import fs from 'fs'\nimport path from 'path'\nimport logo from './logo'\nimport contextMenu from './contextMenu'\nimport { app, BrowserWindow } from 'electron'\n\nexport default ttkclient => url => {\n  if (ttkclient.$emailWin) {\n    ttkclient.$emailWin.show()\n    ttkclient.$emailWin.focus()\n    return ttkclient.$emailWin\n  }\n  if (!url) return\n  const $win = new BrowserWindow({\n    title: 'mail',\n    width: 980,\n    height: 640,\n    minWidth: 720,\n    minHeight: 450,\n    useContentSize: true,\n    resizable: true,\n    menu: false,\n    show: false,\n    icon: logo,\n    webPreferences: {\n      nodeIntegration: true\n    }\n  })\n\n  $win.on('ready-to-show', () => {\n    $win.show()\n    $win.focus()\n  })\n\n  // 窗口关闭后手动让$window为null\n  $win.on('closed', () => {\n    ttkclient.$emailWin = null\n  })\n\n  $win.webContents.on('dom-ready', () => {\n    ttkclient.$mainWin.webContents.session.cookies.get({ domain: '.ttkclient.com' }, (err, cookies) => {\n      if (err) return\n      cookies.forEach(cookie => {\n        if (cookie.domain !== '.ttkclient.com') return\n        $win.webContents.session.cookies.set(\n          {\n            ...cookie,\n            url: 'https://mail.ttkclient.com'\n          },\n          err => {\n            // 回调函数为必传，否则会报错\n            console.log('ttkclient emailWin cookies log:', err)\n          }\n        )\n      })\n    })\n\n    const filename = path.join(app.getAppPath(), './dist/preload/emailWin.js')\n    // 读取js文件并执行\n    fs.access(filename, fs.constants.R_OK, err => {\n      if (err) return\n      fs.readFile(filename, (error, data) => {\n        if (error || $win.webContents.isDestroyed()) return\n        $win.webContents.executeJavaScript(data.toString()).then(() => {\n          if (!$win.webContents.isDestroyed()) {\n            $win.webContents.send('dom-ready')\n          }\n        })\n      })\n    })\n  })\n\n  // 右键菜单\n  $win.webContents.on('context-menu', (e, params) => {\n    e.preventDefault()\n    contextMenu($win, params)\n  })\n\n  // 加载URL地址\n  $win.loadURL(url)\n  return $win\n}\n","import path from 'path'\nimport logo from './logo'\nimport { app, BrowserWindow, ipcMain } from 'electron'\n\nexport default ttkclient => () => {\n  if (ttkclient.$errorWin) {\n    ttkclient.$errorWin.show()\n    ttkclient.$errorWin.focus()\n    return ttkclient.$errorWin\n  }\n\n  const $win = new BrowserWindow({\n    title: '网络错误',\n    width: 600,\n    height: 320,\n    useContentSize: true,\n    resizable: false,\n    center: true,\n    frame: false,\n    menu: false,\n    transparent: true,\n    show: false,\n    closable: false,\n    skipTaskbar: true,\n    icon: logo,\n    webPreferences: {\n      nodeIntegration: true\n    }\n  })\n\n  $win.on('ready-to-show', () => {\n    $win.show()\n    $win.focus()\n  })\n\n  $win.on('closed', () => {\n    ttkclient.$errorWin = null\n  })\n\n  ipcMain.on('ERRORWIN:retry', () => {\n    ttkclient.hideErrorWin()\n    if (ttkclient.$mainWin) {\n      ttkclient.$mainWin.reload()\n      ttkclient.showMainWin()\n    }\n  })\n\n  ipcMain.on('ERRORWIN:close', () => {\n    ttkclient.hideErrorWin()\n  })\n\n  // 加载URL地址\n  const URL =\n    process.env.NODE_ENV === 'development'\n      ? 'http://localhost:8080/errorWin.html'\n      : `file://${path.join(app.getAppPath(), './dist/renderer/errorWin.html')}`\n\n  $win.loadURL(URL)\n  return $win\n}\n","import path from 'path'\nimport logo from './logo'\nimport contextMenu from './contextMenu'\nimport { autoUpdater } from 'electron-updater'\nimport { app, BrowserWindow, ipcMain } from 'electron'\n\nexport default ttkclient => () => {\n  if (ttkclient.$settingWin) {\n    ttkclient.$settingWin.show()\n    ttkclient.$settingWin.focus()\n    return ttkclient.$settingWin\n  }\n  const $win = new BrowserWindow({\n    title: '设置',\n    width: 320,\n    height: 330,\n    useContentSize: true,\n    resizable: false,\n    menu: false,\n    parent: ttkclient.$mainWin,\n    modal: process.platform !== 'darwin',\n    show: false,\n    icon: logo,\n    webPreferences: {\n      nodeIntegration: true\n    }\n  })\n\n  $win.on('ready-to-show', () => {\n    $win.show()\n    $win.focus()\n  })\n\n  // 窗口关闭后手动让$window为null\n  $win.on('closed', () => {\n    ttkclient.$settingWin = null\n  })\n\n  $win.webContents.on('dom-ready', () => {\n    $win.webContents.send('dom-ready', ttkclient.setting)\n  })\n\n  // 右键上下文菜单\n  $win.webContents.on('context-menu', (e, params) => {\n    e.preventDefault()\n    contextMenu($win, params)\n  })\n\n  ipcMain.on('SETTINGWIN:setting', async (e, setting) => {\n    ttkclient.setting = setting\n    await ttkclient.writeSetting()\n    ttkclient.bindShortcut()\n    ttkclient.resetTrayMenu()\n    if (ttkclient.setting.autoupdate) {\n      autoUpdater.checkForUpdates()\n    }\n    ttkclient.hideSettingWin()\n  })\n\n  ipcMain.on('main-window-onlaod', (event, arg) => {\n    event.sender.send('main-window-hidden', 'hidden')\n  })\n\n  // 加载URL地址\n  const URL = process.env.NODE_ENV === 'development'\n    ? 'http://localhost:8080/settingWin.html'\n    : `file://${path.join(app.getAppPath(), './dist/renderer/settingWin.html')}`\n\n  $win.loadURL(URL)\n  return $win\n}\n"],"sourceRoot":""}