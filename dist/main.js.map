{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///external \"electron\"","webpack:///external \"path\"","webpack:///./node_modules/@babel/runtime/helpers/defineProperty.js","webpack:///external \"fs\"","webpack:///external \"require(\\\"electron-updater\\\")\"","webpack:///external \"os\"","webpack:///external \"require(\\\"electron-pdf-window\\\")\"","webpack:///external \"events\"","webpack:///external \"require(\\\"electron-screenshots\\\")\"","webpack:///./src/main/online.js","webpack:///./src/main/logo.js","webpack:///./src/main/notify.js","webpack:///./src/main/download.js","webpack:///./src/main/contextMenu.js","webpack:///./src/main/mainWin.js","webpack:///./src/main/updateWin.js","webpack:///./src/main/shortcut.js","webpack:///./src/main/ttkclientTray.js","webpack:///./src/main/closeWin.js","webpack:///./src/main/index.js","webpack:///./src/main/ttkclient.js","webpack:///./src/main/setting.js","webpack:///./src/main/emailWin.js","webpack:///./src/main/errorWin.js","webpack:///./src/main/settingWin.js","webpack:///./src/main/aboutWin.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","require","obj","configurable","writable","ttkclient","path","join","app","getAppPath","Notify","Events","show","body","this","close","$notify","Notification","title","icon","logo","on","emit","isMac","process","platform","$win","params","menuCmd","copy","id","label","cut","paste","selectall","selectionText","isEditable","editFlags","template","keys","map","cmd","enabled","visible","canCopy","canCut","canPaste","canSelectAll","role","filter","item","sort","a","b","length","isDestroyed","Menu","buildFromTemplate","popup","pkg","autoUpdater","lastUrl","time","Date","now","openExternal","url","indexOf","shell","$mainWin","showMainWin","BrowserWindow","width","height","minWidth","minHeight","useContentSize","center","frame","backgroundColor","resizable","webPreferences","nodeIntegration","maximize","webContents","send","version","e","sendUpdateMessage","setFeedURL","err","action","errorInfo","autoDownload","info","updateInfo","progressObj","ipcMain","arg","quitAndInstall","downloadUpdate","console","log","checkForUpdates","handleUpdate","once","focus","$tray","flicker","filename","fs","access","constants","R_OK","readFile","error","data","executeJavaScript","toString","preventDefault","contextMenu","minimize","isMaximized","unmaximize","dialog","showMessageBox","type","message","buttons","cancelId","index","quit","showCloseWin","showEmailWin","count","setBadgeCount","dock","bounce","event","args","newwin","parent","loadURL","pdfWin","PDFWindow","showPdf","pdfUrl","hide","downloadURL","session","pdfLoad","constructor","Function","tmpDir","os","tmpdir","getFilename","setSavePath","exists","h","unlinkSync","state","isPaused","getReceivedBytes","download","loadFileUrl","$updateWin","menu","modal","sender","URL","ttkclientTray","screen","getPrimaryDisplay","scaleFactor","_ttkclient","Tray","noMessageTrayIcon","setToolTip","initEvent","setMenu","click","showUpdateWin","showAboutWin","setting","enableCapture","setContextMenu","is","enableFlicker","messageTrayIcon","_flickerTimer","setInterval","setImage","clearInterval","destroy","autoupdate","keymap","requestSingleInstanceLock","init","then","setAppUserModelId","setApplicationMenu","initMainWin","initTray","initScreenshots","initNotify","bindShortcut","online","showErrorWin","hideErrorWin","getPath","Promise","resolve","reject","W_OK","async","code","writeSetting","readSetting","initSetting","commandLine","workingDirectory","whenReady","mainWin","$screenshots","Screenshots","JSON","parse","split","writeFile","stringify","getAllWindows","forEach","actions","screenshotsCapture","globalShortcut","unregisterAll","register","isMinimized","restore","startCapture","storage","$emailWin","cookies","domain","cookie","set","$errorWin","transparent","closable","skipTaskbar","reload","showSettingWin","$settingWin","resetTrayMenu","hideSettingWin","$aboutWin","updateWin","$closeWin"],"mappings":"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","file":"main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 10);\n","module.exports = require(\"electron\");","module.exports = require(\"path\");","function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nmodule.exports = _defineProperty;","module.exports = require(\"fs\");","module.exports = require(\"electron-updater\");","module.exports = require(\"os\");","module.exports = require(\"electron-pdf-window\");","module.exports = require(\"events\");","module.exports = require(\"electron-screenshots\");","import { ipcMain } from 'electron'\n\nexport default ttkclient => () => {\n  ipcMain.on('online', (e, online) => {\n    if (online === false) {\n      // 第一次启动窗口\n      if (ttkclient.online === null) {\n        ttkclient.showErrorWin()\n      }\n    } else {\n      ttkclient.hideErrorWin()\n    }\n    ttkclient.online = online\n  })\n}\n","import path from 'path'\nimport { app, screen } from 'electron'\n\nexport default path.join(app.getAppPath(), './resources/logo.png')\n\n/**\n * 没有消息时的托盘图标\n */\nexport function getNoMessageTrayIcon () {\n  if (process.platform === 'darwin') {\n    return path.join(app.getAppPath(), './resources/tray/16x16.png')\n  } else if (process.platform === 'win32') {\n    return path.join(app.getAppPath(), './resources/tray/64x64.png')\n  } else if (screen.getPrimaryDisplay().scaleFactor > 1) {\n    return path.join(app.getAppPath(), './resources/tray/64x64.png')\n  } else {\n    return path.join(app.getAppPath(), './resources/tray/20x20.png')\n  }\n}\n\n/**\n * 有消息时的托盘图标\n */\nexport function getMessageTrayIcon () {\n  if (process.platform === 'darwin') {\n    return path.join(app.getAppPath(), './resources/tray/n-16x16.png')\n  } else if (process.platform === 'win32') {\n    return path.join(app.getAppPath(), './resources/tray/n-64x64.png')\n  } else if (screen.getPrimaryDisplay().scaleFactor > 1) {\n    return path.join(app.getAppPath(), './resources/tray/n-64x64.png')\n  } else {\n    return path.join(app.getAppPath(), './resources/tray/n-20x20.png')\n  }\n}\n","import logo from './logo'\nimport Events from 'events'\nimport { Notification } from 'electron'\n\nexport default class Notify extends Events {\n  $notify = null\n  /**\n   * 显示提示\n   * @param {String} body\n   */\n  show (body) {\n    this.close()\n    this.$notify = new Notification({\n      title: '客户端',\n      body,\n      icon: logo\n    })\n    this.$notify.on('click', () => {\n      this.close()\n      this.emit('click')\n    })\n    this.$notify.show()\n  }\n\n  /**\n   * 关闭提示\n   */\n  close () {\n    if (this.$notify) {\n      this.$notify.close()\n      this.$notify = null\n    }\n  }\n}\n","import { app } from 'electron'\nimport path from 'path'\nimport os from 'os'\nimport fs from 'fs'\nconst isMac = process.platform === 'darwin'\nexport default $win => {\n  // 文件下载拦截\n  const files = []\n  /*$win.webContents.session.on('will-download', (event, item, webContents) => {\n    const time = Date.now()\n    const clientId = `${time}_${files.filter(({ clientId }) => clientId.indexOf(time) === 0).length}`\n    files.push({ clientId, item })\n    const file = {\n      clientId,\n      name: item.getFilename(),\n      fileSize: item.getTotalBytes(),\n      finishSize: item.getReceivedBytes(),\n      url: item.getURL(),\n      state: item.getState(),\n      setSavePath: `file://${path.join(app.getAppPath(), `./dist/renderer/${item.getFilename()}`)}`\n    }\n    if (!$win.isDestroyed()) {\n      webContents.send('MAINWIN:download-start', file)\n    }\n    // 监听下载过程，计算并设置进度条进度\n    item.on('updated', (e, state) => {\n      file.state = state\n      file.finishSize = item.getReceivedBytes()\n      if (!$win.isDestroyed()) {\n        webContents.send('MAINWIN:download-updated', file)\n        $win.setProgressBar(file.finishSize / file.fileSize)\n      }\n    })\n\n    // 监听下载结束事件\n    item.on('done', (e, state) => {\n      file.state = state\n      file.finishSize = item.getReceivedBytes()\n      if (!$win.isDestroyed()) {\n        webContents.send('MAINWIN:download-done', file)\n        $win.setProgressBar(-1)\n      }\n      if (app.dock) {\n        app.dock.bounce('informational')\n      }\n    })\n  })*/\n\n  $win.webContents.session.on('will-download', (event, item, webContents) => {\n    //设置文件存放位置，如果用户没有设置保存路径，Electron将使用默认方式来确定保存路径（通常会提示保存对话框）\n    const pdfLoad = $win.showPdf && $win.showPdf.constructor === Function\n    let tmpDir = os.tmpdir(), pdfUrl\n    if(isMac) {\n      tmpDir = os.tmpDir()\n    }\n    console.log(tmpDir)\n    if(pdfLoad) {\n      pdfUrl = `${tmpDir}/${item.getFilename()}`\n      item.setSavePath(pdfUrl)\n      const pdfFile = fs.exists(pdfUrl, h => {\n        if(h) fs.unlinkSync(pdfUrl)\n      })\n    }\n    item.on('updated', (event, state) => {\n      if (state === 'interrupted') {\n        console.log('Download is interrupted but can be resumed')\n      } else if (state === 'progressing') {\n        if (item.isPaused()) {\n          console.log('Download is paused')\n        } else {\n          console.log(`Received bytes: ${item.getReceivedBytes()}`)\n        }\n      }\n    })\n    item.once('done', (event, state) => {\n      if (state === 'completed') {\n        console.log('Download successfully')\n        //回显 调用渲染进程方法\n        if(pdfLoad && pdfUrl) {\n          $win.showPdf(pdfUrl)\n        }\n        $win.webContents.send('downstate', state)\n      } else {\n        console.log(`Download failed: ${state}`)\n        //回显 调用渲染进程方法\n        $win.webContents.send('downstate', state)\n      }\n    })\n  })\n}\n","import { Menu } from 'electron'\n\nexport default ($win, params) => {\n  // 菜单执行命令\n  const menuCmd = {\n    copy: {\n      id: 1,\n      label: '复制'\n    },\n    cut: {\n      id: 2,\n      label: '剪切'\n    },\n    paste: {\n      id: 3,\n      label: '粘贴'\n    },\n    selectall: {\n      id: 4,\n      label: '全选'\n    }\n  }\n\n  const { selectionText, isEditable, editFlags } = params\n\n  // 生成菜单模板\n  const template = Object.keys(menuCmd)\n    .map(cmd => {\n      const { id, label } = menuCmd[cmd]\n      let enabled = false\n      let visible = false\n      const { canCopy, canCut, canPaste, canSelectAll } = editFlags\n      switch (cmd) {\n        case 'copy':\n          // 有文字选中就显示\n          visible = !!selectionText\n          enabled = canCopy\n          break\n        case 'cut':\n          // 可以编辑就显示项目\n          visible = !!isEditable\n          // 有文字选中才可用\n          enabled = visible && !!selectionText && canCut\n          break\n        case 'paste':\n          // 可以编辑就显示项目\n          visible = !!isEditable\n          enabled = visible && canPaste\n          break\n        case 'selectall':\n          // 可以编辑就显示项目\n          visible = !!isEditable\n          enabled = visible && canSelectAll\n          break\n        default:\n          break\n      }\n      return {\n        id,\n        label,\n        role: cmd,\n        enabled,\n        visible\n      }\n    })\n    .filter(item => item.visible)\n    .sort((a, b) => a.id > b.id)\n\n  // 用模板生成菜单\n  if (template.length && !$win.isDestroyed()) {\n    const menu = Menu.buildFromTemplate(template)\n    menu.popup($win)\n  }\n}\n","import fs from 'fs'\nimport path from 'path'\nimport logo from './logo'\nimport download from './download'\n// import autoUpdate from './autoUpdate'\nimport contextMenu from './contextMenu'\nimport { app, BrowserWindow, shell, ipcMain, Menu, dialog } from 'electron'\nimport PDFWindow from 'electron-pdf-window'\nconst pkg = require('../../package.json')\n\nconst autoUpdater = require('electron-updater').autoUpdater;\nlet lastUrl\nlet time = Date.now()\nconst isMac = process.platform === 'darwin'\n\nconst feedUrl = \"http://127.0.0.1:8080/packages/download/\"\n\n/**\n * 打开外部链接\n * @param {String} url\n */\nfunction openExternal(url) {\n  if (url === 'about:blank') return\n  if (url === 'http://test.aierp.cn:8089/#/edfx-app-root/ttk-zs-app-login') return\n  if (url.indexOf('http://test.aierp.cn:8089/vendor/download') === 0) return\n  if (url.indexOf('http://test.aierp.cn:8089/vendor/attachment') === 0) return\n  // 防止短时间快速点击链接\n  if (lastUrl === url && Date.now() - time < 800) return\n  lastUrl = url\n  time = Date.now()\n  shell.openExternal(url)\n}\n\nexport default ttkclient => () => {\n  if (ttkclient.$mainWin) {\n    ttkclient.showMainWin()\n\n    return\n  }\n\n  // 创建浏览器窗口\n  const $win = new BrowserWindow({\n    title: '金财管家',\n    width: 630,\n    height: 380,\n    minWidth: 630,\n    minHeight: 380,\n    useContentSize: true,\n    center: true,\n    frame: false,\n    show: false,\n    backgroundColor: '#0066b3',\n    icon: logo,\n    resizable: true,\n    webPreferences: {\n      nodeIntegration: true\n    }\n  })\n\n  // if(process.env.NODE_ENV === 'development'){\n    \n  // }\n  // $win.webContents.openDevTools();\n\n  $win.maximize()\n\n\n  $win.webContents.on('did-finish-load', () => {\n    $win.webContents.send('staticData', { \"version\": pkg.version });\n  })\n  handleUpdate($win)\n\n\n  /*if(isMac) { // Menu\n    const menu = Menu.buildFromTemplate(createMenu())\n    Menu.setApplicationMenu(menu)\n  }*/\n\n  /**\n   * 优雅的显示窗口\n   */\n  $win.once('ready-to-show', () => {\n    $win.show()\n    $win.focus()\n\n    /**\n     * 先让主窗口显示后在执行检查更新\n     * 防止对话框跑到主窗口后面\n     * 导致窗口点击不了\n     */\n  })\n\n  /**\n   * 窗体关闭事件处理\n   * 默认只会隐藏窗口\n   */\n  /*$win.on('close', e => {\n    e.preventDefault()\n    $win.hide()\n  })*/\n\n  $win.webContents.on('dom-ready', () => {\n    // 页面初始化图标不跳动\n    if (ttkclient.$tray) ttkclient.$tray.flicker(false)\n    const filename = path.join(app.getAppPath(), './dist/preload/mainWin.js')\n    // 读取js文件并执行\n    fs.access(filename, fs.constants.R_OK, err => {\n      if (err) return\n      fs.readFile(filename, (error, data) => {\n        if (error || $win.webContents.isDestroyed()) return\n        $win.webContents.executeJavaScript(data.toString(), () => {\n          if (!$win.webContents.isDestroyed()) {\n            $win.webContents.send('dom-ready')\n          }\n        })\n      })\n    })\n  })\n\n  // 右键菜单\n  $win.webContents.on('context-menu', (e, params) => {\n    e.preventDefault()\n    contextMenu($win, params)\n  })\n\n  // 浏览器中打开链接\n  $win.webContents.on('new-window', (e, url) => {\n    e.preventDefault()\n    openExternal(url)\n  })\n\n  // 主窗口导航拦截\n  $win.webContents.on('will-navigate', (e, url) => {\n    e.preventDefault()\n    openExternal(url)\n  })\n\n  /**\n  * 程序坞图标打开窗口\n  */\n  app.on('activate', () => {\n    $win.show()\n    $win.focus()\n  })\n\n  ipcMain.on('MAINWIN:window-minimize', () => $win.minimize())\n\n  ipcMain.on('MAINWIN:window-maximization', () => {\n    if ($win.isMaximized()) {\n      $win.unmaximize()\n    } else {\n      $win.maximize()\n    }\n  })\n\n  // ipcMain.on('MAINWIN:window-close', () => $win.hide())\n  ipcMain.on('MAINWIN:window-close', () => {\n    if (isMac) {\n      dialog.showMessageBox({\n        type: \"info\", //图标类型\n        title: \"关闭提示\", //信息提示框标题\n        message: \"点击确定将退出此程序\", //信息提示框内容\n        buttons: [\"确定\", \"取消\"], //下方显示的按钮\n        icon: logo,\n        cancelId: 2 //点击x号关闭返回值\n      }, function (index) {\n        if (index == 0) {\n          app.quit()\n        }\n      })\n    } else {\n      ttkclient.showCloseWin()\n    }\n  })\n  ipcMain.on('MAINWIN:open-email', (e, url) => ttkclient.showEmailWin(url))\n\n  ipcMain.on('MAINWIN:window-show', () => {\n    $win.show()\n    $win.focus()\n  })\n\n  ipcMain.on('MAINWIN:badge', (e, count) => {\n    app.setBadgeCount(count)\n    if (ttkclient.$tray) ttkclient.$tray.flicker(!!count)\n    if (app.dock) {\n      app.dock.show()\n      app.dock.bounce('critical')\n    }\n  })\n\n  ipcMain.on('icpRender-pdfLoad', function (event, args) {\n    const newwin = new BrowserWindow({\n      title: '',\n      width: 600,\n      height: 400,\n      parent: $win,\n    })\n    newwin.loadURL(args)\n    const pdfWin = new PDFWindow({\n      width: 600,\n      height: 400,\n      title: '文件正在加载...'\n    })\n    $win.showPdf = function (pdfUrl) {\n      newwin.hide()\n      pdfWin.loadURL(pdfUrl)\n      pdfWin.maximize();\n      $win.showPdf = null\n    }\n    return newwin\n  })\n\n  ipcMain.on('icpRender-pdfPrint', function (event, args) {\n    const pdfWin = new PDFWindow({\n      width: 600,\n      height: 400,\n      title: '文件正在加载...'\n    })\n    pdfWin.loadURL(args)\n    $win.showPdf = function (pdfUrl) {\n      pdfWin.loadURL(pdfUrl)\n      pdfWin.maximize();\n      $win.showPdf = null\n    }\n  })\n\n  ipcMain.on('icpRender-message', function (event, args) {\n    if (args === 'icpRender-message') {\n      $win.maximize();\n    }\n  })\n\n  ipcMain.on('icpRender-newWin', function (event, args) {\n    const newwin = new BrowserWindow({\n      title: '',\n      width: 600,\n      height: 400,\n      parent: $win,\n    })\n    newwin.maximize();\n    newwin.loadURL(args)\n    return newwin\n  })\n\n  ipcMain.on('icpRender-download', function (event, args) {\n    $win.webContents.downloadURL(args)\n  })\n\n  download($win)\n  // 加载URL地址\n  // $win.loadURL('http://test.aierp.cn:8089/#/edfx-app-root/ttk-zs-app-login')\n  console.log('env:', process.env.NODE_ENV)\n\n  const loadFileUrl = process.env.NODE_ENV === 'development'\n    ? 'http://localhost:8080/aboutWin.html'\n    : `file://${path.join(app.getAppPath(), './dist/renderer/index.html')}`\n  // const loadFileUrl = path.join(__dirname, '../renderer/index.html')\n  $win.loadURL(loadFileUrl)\n\n\n  return $win\n}\n\n\nfunction createMenu() {\n  // Menu\n  const template = [{\n    label: '编辑',\n    submenu: [{\n      label: '撤销',\n      accelerator: 'CmdOrCtrl+Z',\n      role: 'undo'\n    }, {\n      label: '重做',\n      accelerator: 'Shift+CmdOrCtrl+Z',\n      role: 'redo'\n    }, {\n      type: 'separator'\n    }, {\n      label: '复制',\n      accelerator: 'CmdOrCtrl+C',\n      role: 'copy'\n    }, {\n      label: '粘贴',\n      accelerator: 'CmdOrCtrl+V',\n      role: 'paste'\n    }]\n  }, {\n    label: '帮助',\n    role: 'help',\n    submenu: [{\n      label: '学习更多',\n      click: function () {\n        electron.shell.openExternal('http://electron.atom.io')\n      }\n    }]\n  }];\n\n\n  return template\n}\n\n/**\n * 自动更新检测\n */\n\nfunction handleUpdate(e) {\n  // 通过main进程发送事件给renderer进程，提示更新信息\n  function sendUpdateMessage(obj) {\n    e.webContents.send('updateMessage', obj)\n  }\n\n  autoUpdater.setFeedURL(feedUrl);\n  // 监测更新，在你想要检查更新的时候执行，renderer事件触发后的操作自行编写\n  const message = {\n    error: '检查更新出错',\n    checking: '正在检查更新......',\n    updateAva: '监测到新版本，正在下载......',\n    updateNotAva: '现在使用的就是最新版本，不用下载'\n  }\n\n  // 当更新出现错误时触发\n  autoUpdater.on('error', (err) => {\n    sendUpdateMessage({ action: 'error', errorInfo: err })\n  })\n\n  // 当开始检查更新的时候触发\n  autoUpdater.on('checking-for-update', () => {\n    sendUpdateMessage({ action: 'checking' })\n  })\n\n  // 当发现一个可用更新的时候触发，更新下载包会自动开始\n  autoUpdater.autoDownload = false\n  autoUpdater.on('update-available', (info) => {\n    sendUpdateMessage({ action: 'updateAva', updateInfo: info })\n  })\n\n  // 当没有可用更新的时候触发\n  autoUpdater.on('update-not-available', (info) => {\n    sendUpdateMessage({ action: 'updateNotAva', updateInfo: info })\n  })\n\n  // 更新下载进度事件\n  autoUpdater.on('download-progress', (progressObj) => {\n    sendUpdateMessage({ action: 'download-progress', updateInfo: progressObj })\n  })\n\n  /**\n   * event Event\n   * releaseNotes String - 新版本更新公告\n   * releaseName String - 新的版本号\n   * releaseDate Date - 新版本发布的日期\n   * updateUrl String - 更新地址\n   */\n  autoUpdater.on('update-downloaded', (info) => {\n    sendUpdateMessage({ action: 'downloadProgress', updateInfo: info })\n    // 下载太快可能无法触发downloadProgress事件，所以手动通知一下\n    // e.webContents.send('downloadProgress', { percent: 100 })\n    // 可以手动选择是否立即退出并更新\n    ipcMain.on('isUpdateNow', (e, arg) => {\n      // some code here to handle event\n      autoUpdater.quitAndInstall();\n    })\n  })\n\n  ipcMain.on('downloadUpdate', () => {\n    // 下载\n    autoUpdater.downloadUpdate()\n  })\n\n  ipcMain.on('checkForUpdate', () => {\n    console.log('checkForUpdate1')\n    // 执行自动更新检查\n    autoUpdater.checkForUpdates()\n  })\n\n\n}\n\n","import path from 'path'\r\nimport logo from './logo'\r\nimport contextMenu from './contextMenu'\r\n// import { autoUpdater } from 'electron-updater'\r\nimport { app, BrowserWindow, ipcMain, dialog, ipcRenderer } from 'electron'\r\n\r\n// var log = require('electron-log')\r\n// log.transports.console.level = false\r\n// log.transports.console.level = 'silly'\r\nconst pkg = require('../../package.json')\r\nconst feedUrl = \"http://127.0.0.1:8080/packages/download/\"\r\nconst autoUpdater = require('electron-updater').autoUpdater;\r\n\r\nexport default ttkclient => () => {\r\n  if (ttkclient.$updateWin) {\r\n    ttkclient.$updateWin.show()\r\n    ttkclient.$updateWin.focus()\r\n    return ttkclient.$updateWin\r\n  }\r\n  const $win = new BrowserWindow({\r\n    title: \"升级\",\r\n    width: 630,\r\n    height: 420,\r\n    useContentSize: true,\r\n    resizable: false,\r\n    menu: false,\r\n    frame: false,\r\n    parent: ttkclient.$mainWin,\r\n    modal: process.platform !== 'darwin',\r\n    show: false,\r\n    icon: logo,\r\n    webPreferences: {\r\n      nodeIntegration: true\r\n    }\r\n  })\r\n  // $win.webContents.openDevTools();\r\n  $win.on('ready-to-show', () => {\r\n    $win.show()\r\n    $win.focus()\r\n  })\r\n\r\n  // 窗口关闭后手动让$window为null\r\n  $win.on('closed', () => {\r\n    ttkclient.$updateWin = null\r\n  })\r\n\r\n  $win.webContents.on('dom-ready', () => {\r\n    if (!$win.webContents.isDestroyed()) $win.webContents.send('dom-ready')\r\n  })\r\n\r\n\r\n  $win.webContents.on('did-finish-load', () => {\r\n    $win.webContents.send('staticData', { \"version\": pkg.version });\r\n  })\r\n\r\n\r\n  handleUpdate($win)\r\n\r\n\r\n  // 右键上下文菜单\r\n  $win.webContents.on('context-menu', (e, params) => {\r\n    e.preventDefault()\r\n    contextMenu($win, params)\r\n  })  // update start\r\n  // let sendUpdateMessage = (message, data) => {\r\n  //   $win.webContents.send('message', { message, data, feedUrl });\r\n  // };\r\n\r\n  ipcMain.on('main-window-onlaod', (event, arg) => {\r\n    event.sender.send('main-window-hidden', 'hidden')\r\n  })\r\n\r\n  // 加载URL地址\r\n  const URL = process.env.NODE_ENV === 'development'\r\n    ? 'https://erp.jchl.com/#/edfx-app-root/edfx-app-agreement'\r\n    : `file://${path.join(app.getAppPath(), './dist/renderer/updateWin.html')}`\r\n\r\n  $win.loadURL(URL)\r\n  return $win\r\n}\r\n/**\r\n * 自动更新检测\r\n */\r\n\r\n\r\nfunction handleUpdate(e) {\r\n  // 通过main进程发送事件给renderer进程，提示更新信息\r\n  function sendUpdateMessage(obj) {\r\n    e.webContents.send('updateMessage', obj)\r\n  }\r\n\r\n  autoUpdater.setFeedURL(feedUrl);\r\n  // 监测更新，在你想要检查更新的时候执行，renderer事件触发后的操作自行编写\r\n  const message = {\r\n    error: '检查更新出错',\r\n    checking: '正在检查更新......',\r\n    updateAva: '监测到新版本，正在下载......',\r\n    updateNotAva: '现在使用的就是最新版本，不用下载'\r\n  }\r\n\r\n  // 当更新出现错误时触发\r\n  autoUpdater.on('error', (err) => {\r\n    sendUpdateMessage({ action: 'error', errorInfo: err })\r\n  })\r\n\r\n  // 当开始检查更新的时候触发\r\n  autoUpdater.on('checking-for-update', () => {\r\n    sendUpdateMessage({ action: 'checking' })\r\n  })\r\n\r\n  // 当发现一个可用更新的时候触发，更新下载包会自动开始\r\n  autoUpdater.autoDownload = false;\r\n  autoUpdater.on('update-available', (info) => {\r\n    sendUpdateMessage({ action: 'updateAva', updateInfo: info })\r\n  })\r\n\r\n  // 当没有可用更新的时候触发\r\n  autoUpdater.on('update-not-available', (info) => {\r\n    sendUpdateMessage({ action: 'updateNotAva', updateInfo: info })\r\n  })\r\n\r\n  // 更新下载进度事件\r\n  autoUpdater.on('download-progress', (progressObj) => {\r\n    sendUpdateMessage({ action: 'download-progress', updateInfo: progressObj })\r\n  })\r\n\r\n  /**\r\n   * event Event\r\n   * releaseNotes String - 新版本更新公告\r\n   * releaseName String - 新的版本号\r\n   * releaseDate Date - 新版本发布的日期\r\n   * updateUrl String - 更新地址\r\n   */\r\n  autoUpdater.on('update-downloaded', (info) => {\r\n    sendUpdateMessage({ action: 'downloadProgress', updateInfo: info })\r\n    // 下载太快可能无法触发downloadProgress事件，所以手动通知一下\r\n    // e.webContents.send('downloadProgress', { percent: 100 })\r\n    // 可以手动选择是否立即退出并更新\r\n    ipcMain.on('isUpdateNow', (e, arg) => {\r\n      autoUpdater.quitAndInstall()\r\n    })\r\n  })\r\n\r\n  ipcMain.on('checkForUpdate', () => {\r\n    // console.log('1111111');\r\n    autoUpdater.checkForUpdates();\r\n  })\r\n\r\n  ipcMain.on('downloadUpdate', () => {\r\n    // console.log('downloadUpdate')\r\n    autoUpdater.downloadUpdate();\r\n  })\r\n  ipcMain.on('window-close', () => {\r\n    // console.log('close close')\r\n    e.close();\r\n  })\r\n\r\n\r\n  // //执行自动更新检查\r\n  // autoUpdater.checkForUpdates();\r\n  // console.log('2222222');\r\n}\r\n\r\n","import { globalShortcut } from 'electron'\n\nexport default ttkclient => () => {\n  const actions = {\n    'screenshots-capture': () => ttkclient.screenshotsCapture()\n  }\n  const keymap = ttkclient.setting.keymap\n\n  if (!ttkclient.setting.enableCapture) delete actions['screenshots-capture']\n\n  // 注销所有的快捷键\n  globalShortcut.unregisterAll()\n  Object.keys(actions).forEach(key => {\n    if (keymap[key] && keymap[key].length) {\n      globalShortcut.register(keymap[key].join('+'), actions[key])\n    }\n  })\n}\n","import { Tray, Menu } from 'electron'\nimport { getMessageTrayIcon, getNoMessageTrayIcon } from './logo'\n\nexport default class ttkclientTray {\n  _ttkclient = null\n  // 图标闪烁定时\n  _flickerTimer = null\n\n  // 托盘对象\n  $tray = null\n  // 图标文件\n  messageTrayIcon = getMessageTrayIcon()\n  noMessageTrayIcon = getNoMessageTrayIcon()\n\n  constructor({ ttkclient }) {\n    this._ttkclient = ttkclient\n    // 生成托盘图标及其菜单项实例\n    this.$tray = new Tray(this.noMessageTrayIcon)\n    // 设置鼠标悬浮时的标题\n    this.$tray.setToolTip('金财管家')\n    this.initEvent()\n    this.setMenu()\n  }\n\n  /**\n   * 初始化事件\n   */\n  initEvent() {\n    this.$tray.on('click', () => this._ttkclient.showMainWin())\n    this.$tray.on('double-click', () => this._ttkclient.showMainWin())\n  }\n\n  /**\n   * 设置菜单\n   */\n  setMenu() {\n    const menu = [\n      {\n        label: '显示窗口',\n        click: () => this._ttkclient.showMainWin()\n      },\n      // {\n      //   label: '系统设置',\n      //   click: () => this._ttkclient.showSettingWin()\n      // },\n      {\n        label: '升级',\n        click: () => this._ttkclient.showUpdateWin()\n      },\n      {\n        label:'关于金财管家',\n        click: () => this._ttkclient.showAboutWin()\n      },\n      {\n        label: '退出程序',\n        click: () => this._ttkclient.quit()\n      }\n    ]\n\n    if (this._ttkclient.setting.enableCapture && false) {\n      menu.splice(1, 0, {\n        label: '屏幕截图',\n        click: () => this._ttkclient.screenshotsCapture()\n      })\n    }\n\n    // 绑定菜单\n    this.$tray.setContextMenu(Menu.buildFromTemplate(menu))\n  }\n\n  /**\n   * 控制图标是否闪烁\n   * @param {Boolean} is\n   */\n  flicker(is) {\n    const { enableFlicker } = this._ttkclient.setting\n    if (is) {\n      let icon = this.messageTrayIcon\n      if (enableFlicker) {\n        // 防止连续调用多次，导致图标切换时间间隔不是1000ms\n        if (this._flickerTimer !== null) return\n        this._flickerTimer = setInterval(() => {\n          this.$tray.setImage(icon)\n          icon = icon === this.messageTrayIcon ? this.noMessageTrayIcon : this.messageTrayIcon\n        }, 1000)\n      } else {\n        this.$tray.setImage(icon)\n      }\n    } else {\n      clearInterval(this._flickerTimer)\n      this._flickerTimer = null\n      this.$tray.setImage(this.noMessageTrayIcon)\n    }\n  }\n\n  /**\n   * 判断托盘是否销毁\n   */\n  isDestroyed() {\n    return this.$tray.isDestroyed()\n  }\n\n  /**\n   * 销毁托盘图标\n   */\n  destroy() {\n    return this.$tray.destroy()\n  }\n}\n","import path from 'path'\nimport logo from './logo'\nimport { app, BrowserWindow, ipcMain } from 'electron'\n\n\nexport default ttkclient => () => {\n  if (ttkclient.$closeWin) {\n    ttkclient.$closeWin.show()\n    ttkclient.$closeWin.focus()\n    return ttkclient.$closeWin\n  }\n  const $win = new BrowserWindow({\n    title: \"\",\n    width: 380,\n    height: 120,\n    useContentSize: true,\n    resizable: false,\n    menu: false,\n    parent: ttkclient.$mainWin,\n    modal: process.platform !== 'darwin',\n    show: false,\n    icon: logo,\n    webPreferences: {\n      nodeIntegration: true\n    }\n  })\n//   $win.webContents.openDevTools();\n\n  $win.on('ready-to-show', () => {\n    $win.show()\n    $win.focus()\n  })\n\n  // 窗口关闭后手动让$window为null\n  $win.on('closed', () => {\n    ttkclient.$closeWin = null\n  })\n\n  $win.webContents.on('dom-ready', () => {\n    if (!$win.webContents.isDestroyed()) $win.webContents.send('dom-ready')\n  })\n\n  ipcMain.on('CLOSEWIN:close', (event, arg) => {\n    if(arg == 'self') {\n        $win.hide()\n    } else if(arg == 'all') {\n        ttkclient.quit()\n    }\n  })\n\n  // 加载URL地址\n  const URL = process.env.NODE_ENV === 'development'\n    ? 'https://erp.jchl.com/#/edfx-app-root/edfx-app-agreement'\n    : `file://${path.join(app.getAppPath(), './dist/renderer/closeWin.html')}`\n\n  $win.loadURL(URL)\n  return $win\n}\n","import ttkclient from './ttkclient'\n\n/* eslint-disable no-new */\nnew ttkclient()\n","import { app, Menu, ipcMain, BrowserWindow } from 'electron'\nimport path from 'path'\nimport { initSetting, readSetting, writeSetting } from './setting'\nimport online from './online'\nimport Notify from './notify'\nimport mainWin from './mainWin'\nimport emailWin from './emailWin'\nimport errorWin from './errorWin'\nimport aboutWin from './aboutWin'\nimport updateWin from './updateWin'\nimport shortcut from './shortcut'\nimport settingWin from './settingWin'\nimport ttkclientTray from './ttkclientTray'\nimport closeWin from './closeWin'\nimport Screenshots from 'electron-screenshots'\n\n// const autoUpdater = require('electron-updater').autoUpdater;\n// var log = require('electron-log')\n// log.transports.console.level = false\n// log.transports.console.level = 'silly'\n\n// const updateURL = 'http://127.0.0.1:8080/packages/download/'\nexport default class ttkclient {\n  // app对象是否ready\n  _ready = null\n  // 托盘图标\n  $tray = null\n  // 主窗口\n  $mainWin = null\n  // 邮箱窗口\n  $emailWin = null\n  // 错误窗口\n  $errorWin = null\n  // 设置窗口\n  $settingWin = null\n  // 关于窗口\n  $aboutWin = null\n  //升级窗口\n  $updateWin=null\n  // 关闭提示窗口\n  $closeWin = null\n  // 截图对象\n  $screenshots = null\n  // 网络情况，默认为null，必须等到页面报告状态\n  online = null\n\n  // 默认配置\n  setting = {\n    autoupdate: true,\n    enableCapture: true,\n    enableFlicker: true,\n    keymap: {\n      'screenshots-capture': ['Control', 'Alt', 'A']\n    }\n  }\n\n  constructor() {\n    if (!app.requestSingleInstanceLock()) return app.quit()\n\n    // flash\n    // app.commandLine.appendSwitch('ppapi-flash-path', `file://${path.join(app.getAppPath(), './resources/pepflashplayer.dll')}`);\n    // app.commandLine.appendSwitch('ppapi-flash-path', app.getPath('pepperFlashSystemPlugin'));\n    // app.commandLine.appendSwitch('ppapi-flash-version', '32.0.0.363');\n\n    this.init().then(() => {\n      app.setAppUserModelId('com.electron.ttkclient')\n      // 移除窗口菜单\n      Menu.setApplicationMenu(null)\n      this.initMainWin()\n      this.initTray()\n      this.initScreenshots()\n      this.initNotify()\n      this.bindShortcut()\n    })\n  }\n\n  /**\n   * 初始化\n   * @return {Promise} setting\n   */\n  async init() {\n    online(this)()\n    this.setting = await initSetting(this)()\n    // 重复打开应用就显示窗口\n    app.on('second-instance', (event, commandLine, workingDirectory) => this.showMainWin())\n\n    /* app.setLoginItemSettings({\n      openAtLogin: true, // Boolean 在登录时启动应用\n      openAsHidden: true, // Boolean (可选) mac 表示以隐藏的方式启动应用。~~~~\n      // path: '', String (可选) Windows - 在登录时启动的可执行文件。默认为 process.execPath.\n      // args: [] String Windows - 要传递给可执行文件的命令行参数。默认为空数组。注意用引号将路径换行。\n    }) */\n\n    // 所有窗口关闭之后退出应用\n    app.once('window-all-closed', () => {\n      if (process.platform !== 'darwin') {\n        if (this.$tray && !this.$tray.isDestroyed()) {\n          this.$tray.destroy()\n          this.$tray = null\n        }\n        app.quit()\n      }\n    })\n    return app.whenReady()\n  }\n\n  /**\n   * 初始化主窗口\n   */\n  initMainWin() {\n    this.$mainWin = mainWin(this)()\n  }\n\n  /**\n   * 初始化托盘图标\n   */\n  initTray() {\n    this.$tray = new ttkclientTray({ ttkclient: this })\n  }\n\n  /**\n   * 初始化截图\n   */\n  initScreenshots() {\n    this.$screenshots = new Screenshots()\n  }\n\n\n\n\n\n  /**\n   * 初始化消息提示\n   */\n  initNotify() {\n    console.log('initNotify');\n    this.$notify = new Notify()\n    ipcMain.on('notify', (e, body) => this.$notify.show(body))\n    this.$notify.on('click', () => this.showMainWin())\n\n    // this.handleUpdate()\n  }\n\n  /**\n   * 从文件中读取设置信息\n   * @return {Promise} setting\n   */\n  readSetting() {\n    return readSetting(this)()\n  }\n\n  /**\n   * 写入设置到文件\n   * @return {Promise} setting\n   */\n  writeSetting() {\n    return writeSetting(this)()\n  }\n\n  /**\n   * 退出应用\n   */\n  quit() {\n    const windows = BrowserWindow.getAllWindows()\n    windows.forEach(item => item.destroy())\n    if (process.platform !== 'darwin') {\n      if (this.$tray && !this.$tray.isDestroyed()) {\n        this.$tray.destroy()\n        this.$tray = null\n      }\n      app.quit()\n    }\n  }\n\n  /**\n   * 绑定快捷键\n   */\n  bindShortcut() {\n    shortcut(this)()\n  }\n\n  /**\n   * 显示主窗口\n   */\n  showMainWin() {\n    if (this.$mainWin) {\n      if (this.online) {\n        if (this.$mainWin.isMinimized()) this.$mainWin.restore()\n        this.$mainWin.show()\n        this.$mainWin.focus()\n      } else if (this.online === false) {\n        /**\n         * this.online === null不显示\n         * 因为可能此时还没有初始化online\n         * 即$mainWin还没有触发dom-ready\n         */\n        this.showErrorWin()\n      }\n\n      // this.updateHandle()\n    }\n  }\n\n  /**\n   * 截图\n   */\n  screenshotsCapture() {\n    if (this.$screenshots) {\n      this.$screenshots.startCapture()\n    }\n  }\n\n  /**\n   * 显示邮箱窗口\n   * @param {Object} storage\n   */\n  showEmailWin(storage) {\n    this.$emailWin = emailWin(this)(storage)\n  }\n\n  /**\n   * 显示错误窗口\n   */\n  showErrorWin() {\n    this.$errorWin = errorWin(this)()\n  }\n\n  /**\n   * 隐藏错误窗口\n   */\n  hideErrorWin() {\n    if (this.$errorWin) {\n      this.$errorWin.close()\n    }\n  }\n\n  /**\n   * 显示设置窗口\n   */\n  showSettingWin() {\n    this.$settingWin = settingWin(this)()\n  }\n\n  /**\n   * 关闭设置窗口\n   */\n  hideSettingWin() {\n    if (this.$settingWin) {\n      this.$settingWin.close()\n    }\n  }\n\n  resetTrayMenu() {\n    if (this.$tray && !this.$tray.isDestroyed()) {\n      this.$tray.setMenu()\n    }\n  }\n\n  /**\n   * 显示关于窗口\n   */\n  showAboutWin() {\n    this.$aboutWin = aboutWin(this)()\n  }\n\n  /**\n   * 显示升级窗口\n   */\n  showUpdateWin() {\n    this.$updateWin = updateWin(this)()\n  }\n\n\n  /**\n   * 显示关闭窗口\n   */\n  showCloseWin() {\n    this.$closeWin = closeWin(this)()\n  }\n}\n","import fs from 'fs'\nimport path from 'path'\nimport { app } from 'electron'\n\n/**\n * 初始化设置选项\n */\nexport const initSetting = ttkclient => () => {\n  const filename = path.join(app.getPath('userData'), 'setting.json')\n  return new Promise((resolve, reject) => {\n    fs.access(filename, fs.constants.R_OK | fs.constants.W_OK, async err => {\n      if (err) {\n        if (err.code === 'ENOENT') {\n          return resolve(await ttkclient.writeSetting())\n        } else {\n          return reject(err)\n        }\n      }\n      resolve(await ttkclient.readSetting())\n    })\n  })\n}\n\n/**\n * 从文件中读取设置信息\n */\nexport const readSetting = ttkclient => () => {\n  const filename = path.join(app.getPath('userData'), 'setting.json')\n  return new Promise((resolve, reject) => {\n    fs.readFile(filename, (err, data) => {\n      if (err) return reject(err)\n      try {\n        const setting = JSON.parse(data)\n        if (typeof setting.keymap['screenshots-capture'] === 'string') {\n          setting.keymap['screenshots-capture'] = setting.keymap['screenshots-capture'].split('+')\n        }\n        resolve({ ...ttkclient.setting, ...setting })\n      } catch (e) {\n        resolve(ttkclient.setting)\n      }\n    })\n  })\n}\n\n/**\n * 写入设置到文件\n */\nexport const writeSetting = ttkclient => () => {\n  const filename = path.join(app.getPath('userData'), 'setting.json')\n  return new Promise((resolve, reject) => {\n    fs.writeFile(filename, JSON.stringify(ttkclient.setting, null, 2), err => {\n      if (err) return reject(err)\n      resolve(ttkclient.setting)\n    })\n  })\n}\n","import fs from 'fs'\nimport path from 'path'\nimport logo from './logo'\nimport contextMenu from './contextMenu'\nimport { app, BrowserWindow } from 'electron'\n\nexport default ttkclient => url => {\n  if (ttkclient.$emailWin) {\n    ttkclient.$emailWin.show()\n    ttkclient.$emailWin.focus()\n    return ttkclient.$emailWin\n  }\n  if (!url) return\n  const $win = new BrowserWindow({\n    title: 'mail',\n    width: 980,\n    height: 640,\n    minWidth: 720,\n    minHeight: 450,\n    useContentSize: true,\n    resizable: true,\n    menu: false,\n    show: false,\n    icon: logo,\n    webPreferences: {\n      nodeIntegration: true\n    }\n  })\n\n  $win.on('ready-to-show', () => {\n    $win.show()\n    $win.focus()\n  })\n\n  // 窗口关闭后手动让$window为null\n  $win.on('closed', () => {\n    ttkclient.$emailWin = null\n  })\n\n  $win.webContents.on('dom-ready', () => {\n    ttkclient.$mainWin.webContents.session.cookies.get({ domain: '.ttkclient.com' }, (err, cookies) => {\n      if (err) return\n      cookies.forEach(cookie => {\n        if (cookie.domain !== '.ttkclient.com') return\n        $win.webContents.session.cookies.set(\n          {\n            ...cookie,\n            url: 'https://mail.ttkclient.com'\n          },\n          err => {\n            // 回调函数为必传，否则会报错\n            console.log('ttkclient emailWin cookies log:', err)\n          }\n        )\n      })\n    })\n\n    const filename = path.join(app.getAppPath(), './dist/preload/emailWin.js')\n    // 读取js文件并执行\n    fs.access(filename, fs.constants.R_OK, err => {\n      if (err) return\n      fs.readFile(filename, (error, data) => {\n        if (error || $win.webContents.isDestroyed()) return\n        $win.webContents.executeJavaScript(data.toString()).then(() => {\n          if (!$win.webContents.isDestroyed()) {\n            $win.webContents.send('dom-ready')\n          }\n        })\n      })\n    })\n  })\n\n  // 右键菜单\n  $win.webContents.on('context-menu', (e, params) => {\n    e.preventDefault()\n    contextMenu($win, params)\n  })\n\n  // 加载URL地址\n  $win.loadURL(url)\n  return $win\n}\n","import path from 'path'\nimport logo from './logo'\nimport { app, BrowserWindow, ipcMain } from 'electron'\n\nexport default ttkclient => () => {\n  if (ttkclient.$errorWin) {\n    ttkclient.$errorWin.show()\n    ttkclient.$errorWin.focus()\n    return ttkclient.$errorWin\n  }\n\n  const $win = new BrowserWindow({\n    title: '网络错误',\n    width: 600,\n    height: 320,\n    useContentSize: true,\n    resizable: false,\n    center: true,\n    frame: false,\n    menu: false,\n    transparent: true,\n    show: false,\n    closable: false,\n    skipTaskbar: true,\n    icon: logo,\n    webPreferences: {\n      nodeIntegration: true\n    }\n  })\n\n  $win.on('ready-to-show', () => {\n    $win.show()\n    $win.focus()\n  })\n\n  $win.on('closed', () => {\n    ttkclient.$errorWin = null\n  })\n\n  ipcMain.on('ERRORWIN:retry', () => {\n    ttkclient.hideErrorWin()\n    if (ttkclient.$mainWin) {\n      ttkclient.$mainWin.reload()\n      ttkclient.showMainWin()\n    }\n  })\n\n  ipcMain.on('ERRORWIN:close', () => {\n    ttkclient.hideErrorWin()\n  })\n\n  // 加载URL地址\n  const URL =\n    process.env.NODE_ENV === 'development'\n      ? 'http://localhost:8080/errorWin.html'\n      : `file://${path.join(app.getAppPath(), './dist/renderer/errorWin.html')}`\n\n  $win.loadURL(URL)\n  return $win\n}\n","import path from 'path'\nimport logo from './logo'\nimport contextMenu from './contextMenu'\nimport { autoUpdater } from 'electron-updater'\nimport { app, BrowserWindow, ipcMain } from 'electron'\n\nexport default ttkclient => () => {\n  if (ttkclient.$settingWin) {\n    ttkclient.$settingWin.show()\n    ttkclient.$settingWin.focus()\n    return ttkclient.$settingWin\n  }\n  const $win = new BrowserWindow({\n    title: '设置',\n    width: 320,\n    height: 330,\n    useContentSize: true,\n    resizable: false,\n    menu: false,\n    parent: ttkclient.$mainWin,\n    modal: process.platform !== 'darwin',\n    show: false,\n    icon: logo,\n    webPreferences: {\n      nodeIntegration: true\n    }\n  })\n\n  $win.on('ready-to-show', () => {\n    $win.show()\n    $win.focus()\n  })\n\n  // 窗口关闭后手动让$window为null\n  $win.on('closed', () => {\n    ttkclient.$settingWin = null\n  })\n\n  $win.webContents.on('dom-ready', () => {\n    $win.webContents.send('dom-ready', ttkclient.setting)\n  })\n\n  // 右键上下文菜单\n  $win.webContents.on('context-menu', (e, params) => {\n    e.preventDefault()\n    contextMenu($win, params)\n  })\n\n  ipcMain.on('SETTINGWIN:setting', async (e, setting) => {\n    ttkclient.setting = setting\n    await ttkclient.writeSetting()\n    ttkclient.bindShortcut()\n    ttkclient.resetTrayMenu()\n    if (ttkclient.setting.autoupdate) {\n      autoUpdater.checkForUpdates()\n    }\n    ttkclient.hideSettingWin()\n  })\n\n  ipcMain.on('main-window-onlaod', (event, arg) => {\n    event.sender.send('main-window-hidden', 'hidden')\n  })\n\n  // 加载URL地址\n  const URL = process.env.NODE_ENV === 'development'\n    ? 'http://localhost:8080/settingWin.html'\n    : `file://${path.join(app.getAppPath(), './dist/renderer/settingWin.html')}`\n\n  $win.loadURL(URL)\n  return $win\n}\n","import path from 'path'\nimport logo from './logo'\nimport contextMenu from './contextMenu'\n// import { autoUpdater } from 'electron-updater'\nimport { app, BrowserWindow, ipcMain, dialog } from 'electron'\n// var log = require('electron-log')\n// log.transports.console.level = false\n// log.transports.console.level = 'silly'\n\n\nexport default ttkclient => () => {\n  if (ttkclient.$aboutWin) {\n    ttkclient.$aboutWin.show()\n    ttkclient.$aboutWin.focus()\n    return ttkclient.$aboutWin\n  }\n  const $win = new BrowserWindow({\n    title: \"金财管家\",\n    width: 320,\n    height: 400,\n    useContentSize: true,\n    resizable: false,\n    menu: false,\n    parent: ttkclient.$mainWin,\n    modal: process.platform !== 'darwin',\n    show: false,\n    icon: logo,\n    webPreferences: {\n      nodeIntegration: true\n    }\n  })\n  // $win.webContents.openDevTools();\n  $win.on('ready-to-show', () => {\n    $win.show()\n    $win.focus()\n  })\n\n  // 窗口关闭后手动让$window为null\n  $win.on('closed', () => {\n    ttkclient.$aboutWin = null\n  })\n\n  $win.webContents.on('dom-ready', () => {\n    if (!$win.webContents.isDestroyed()) $win.webContents.send('dom-ready')\n  })\n\n  // 右键上下文菜单\n  $win.webContents.on('context-menu', (e, params) => {\n    e.preventDefault()\n    contextMenu($win, params)\n  })  // update start\n  // let sendUpdateMessage = (message, data) => {\n  //   $win.webContents.send('message', { message, data, feedUrl });\n  // };\n\n  ipcMain.on('main-window-onlaod', (event, arg) => {\n    event.sender.send('main-window-hidden', 'hidden')\n  })\n\n  // 加载URL地址\n  const URL = process.env.NODE_ENV === 'development'\n    ? 'https://erp.jchl.com/#/edfx-app-root/edfx-app-agreement'\n    : `file://${path.join(app.getAppPath(), './dist/renderer/aboutWin.html')}`\n\n  $win.loadURL(URL)\n  return $win\n}\n"],"sourceRoot":""}